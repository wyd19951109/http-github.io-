<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java开发技术路线]]></title>
    <url>%2F2019%2F07%2F23%2FJava%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E8%B7%AF%E7%BA%BF%2F</url>
    <content type="text"><![CDATA[java开发学习路线基础知识 变成语言：java python c 基本语法 基本网络知识：tcp/ip http/https 工具方面 操作系统：linux (CentOS\Ubuntu\Fe..) 代码管理：svn/git 持续集成(CI/CD):jenkins java的项目管理工具：maven/gradle 框架方面 ssh (spring+structs+hibernate)(已过时) ssm:spring +springmvc+mybatis(流行) spring boot 各种中间件 MQ 消息队列 RPC 通讯框架 gRPC thrift dubbo springcloud elasticsearch 收索引擎 数据库 数据库 SQL：mysql/postgre sql Nosql:redis memcached mongodb elasticsearch 架构方面 分布式/微服务架构 spring cloud dubbo rpc通信 虚拟化/容器化的技术 Docker 容器化 k8s kubernetes 关注源码/性能 jdk源码以及部分设计思想 Spring 源码 JVM细节与排错 高并发/高可用]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>开发技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java面试(1)]]></title>
    <url>%2F2018%2F10%2F23%2FJava%E9%9D%A2%E8%AF%95%E9%A2%98(1)%2F</url>
    <content type="text"><![CDATA[Java面试题1、什么是Java虚拟机？为什么Java被称作是“平台无关的编程语言”？Java虚拟机是一个可以执行Java字节码的虚拟机进程。 Java的跨平台不是指的是源程序的跨平台，Java源程序是先经过javac编译器编译成二进制的.class字节码文件，跨平台指的是.class字节码文件，.class字节码文件运行在jvm上，由java解释器（jvm的一部分）会将其解释成对应平台的机器码执行，所以“与平台无关的语言”是指不同平台上安装了不同的jvm，而在不同平台上生成的.class文件是一样的，而.class文件再由对应平台的jvm解释成对应平台的机器码。 一次编译，永久运行 2、JDK和JRE的区别是什么？JRE(Java Runtime Environment):Java运行时环境，包含了jvm，Java的核心类库和支持文件，是使用java语言编写的程序运行所需要的软件环境，是提供给想运行java程序的用户使用的。 JDK(Java Development Kit)：Java开发工具包，包好了jre、编译器等，是程序员使用java语言编写java程序所需要的开发工具包，让开发者开发、编译、执行java应用程序。 如果你想运行java程序，只需要安装jre就行了，如果你想编写java程序，需要安装jdk。 3、“static”关键字是什么意思？Java是否可以覆盖（override）一个private或者是static的方法？static关键字表示静态的意义，它可以修饰一个变量，一个方法，被其修饰的变量称为类变量，被其修饰的方法称为类方法，其随着类的加载而被加载。 java中static方法是不能被覆盖，因为static方法是编译时候静态绑定的，方法覆盖是基于运行时动态绑定的。 重写的前提是必须要继承，private修饰不支持继承，因此被私有的方法不可以被重写。 4、是否可以在static环境中访问非static变量？不能直接访问，因为static成员实在类被加载时而加载的，而非static成员则是在类被实例化时创建的，只能通过实例进行访问。大在static环境中访问非static变量时，此时实例很可能还没有被创建，所以不能访问非static变量。 5、Java支持的数据类型有哪些？什么是自动拆装箱？java支持8大基本数据类型（byte、short、int、long、float、double、boolean、char） String是引用类型 引用类型：JVM中虚拟栈中存的是对象的地址，创建的对象实质在堆中，通过地址来找堆中的对象的过程，即为引用类型， 自动装箱：java编译器在基本数据类型和对应的对象包装类型（引用类型）之间的转换，如int转换为Interger。通俗的讲就是把基本数据转换为对象，转换为对象可以方便的操作数据。拆箱就是其逆过程。 6、Java中的方法覆盖（overriding）和方法重载（overload）是什么意思？方法覆盖指的是子类重新定义了父类的方法，方法覆盖必须有相同的方法名，参数列表和返回类型，访问权限不允许缩小。 方法重载是同一个类里面两个或者多个方法的方法名相同但是参数不同的情况。 7、Java中，什么是构造方法？什么是构造方法重载？什么是复制构造方法？构造函数就是在类的对象在创建时会调用的函数，如果没写构造函数，系统会为该对象提供一个默认的构造函数。构造函数的重载与方法发的重载相似，可以为类创建多个构造方法，每一个构造方法必须有它自己唯一的参数列表（例如有参构造和无参构造）。java中复制构造函数就是讲本类的对象作为参数的构造函数，目的是用一个已经实例化的对象来初始化另一个对象，简单的说就是拷贝一个对象。 8、Java支持多继承？java中类不支持多继承，只支持单继承。但是java中的接口是支持多继承的，接口的作用是用来扩展对象的功能，一个子接口继承多个父接口，说明子接口扩展了多个功能，当类实现接口时，类就扩展了相应的功能。 9、接口和抽象类的区别？1.接口中所有方法都是抽象的 ,而抽象类中可以有抽象方法和普通方法 2.一个类可以实现多个接口,但只能继承一个抽象类 3.如果一个类继承了一个抽象类或者实现一个接口, 却没有实现其中所有的方法,那这个类还是抽象类. 4.接口的变量都是final的 ,抽象类的变量可以不是final 5.接口中函数是public 抽象类的函数是public ,protected,private 。 从设计层面来说，抽象是对类的抽象，是一种模板设计，借口是行为的抽象，是一种行为的规范。 10、什么是值传递和引用传递？值传递传递的是该变量的一个副本，改变副本不影响原变量。 引用传递一般是对于对象型变量而言的，传递的是该对象地址的一个副本，并不是原对象本身。 结合画图很容易理解。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>面试</tag>
        <tag>Java</tag>
      </tags>
  </entry>
</search>
